#!/usr/bin/php
<?php
/**
* FILE: script/generate
* PURPOSE: used to generate code
*
* This file is part of StarbugPHP
*
* StarbugPHP - website development kit
* Copyright (C) 2008-2009 Ali Gangji
*
* StarbugPHP is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* StarbugPHP is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with StarbugPHP.  If not, see <http://www.gnu.org/licenses/>.
*/
$help = "Usage: generate TYPE NAME [OPTIONS]\n\n";
$help .= "TYPE\tWhat to generate\n";
$help .= "    \t\tcrud - CRUD nouns\n";
$help .= "    \t\tmodel - Object model\n";
if ($argc==2) $argv[2] = "";
if (!defined('BASE_DIR')) define('BASE_DIR', str_replace("/script", "", dirname(__FILE__)));
set_include_path(get_include_path().PATH_SEPARATOR.BASE_DIR);
if (!defined('STDOUT')) define("STDOUT", fopen("php://stdout", "wb"));
if (!defined('STDIN')) define("STDIN", fopen("php://stdin", "r"));
include(BASE_DIR."/etc/Etc.php");
include(BASE_DIR."/core/init.php");
include(BASE_DIR."/core/db/Schemer.php");
global $schemer;
$schemer = new Schemer($sb->db);
$migrations = unserialize(reset($sb->query("options", "select:value  where:name='migrations'  limit:1")));
call_user_func_array(array($schemer, "add_migrations"), $migrations);
$to = reset($sb->query("options", "select:value  where:name='migration'  limit:1"));
//MOVE TO CURRENT MIGRATION
$current = 0;
while ($current < $to) {
	$migration = new $schemer->migrations[$current]();
	$migration->up();
	$current++;
}
include(BASE_DIR."/etc/Theme.php");
include(BASE_DIR."/util/Args.php");
$args = new Args();
global $sb;
if ((!empty($argv[2])) && (isset($schemer->tables[$argv[2]]))) {
	$fields = $schemer->tables[$argv[2]];

	//CREATE MODEL XML
	$model = "<model name=\"$argv[2]\" label=\"".ucwords($argv[2])."\">\n";
	$uniques = array(); $defaults = array(); $lengths = array();
	foreach($fields as $name => $field) {
		$model .= "\t<field name=\"$name\"";
		$kids = "";
		if (!isset($field['input_type'])) {
			if ($field['type'] == "text") $field['input_type'] = "textarea";
			else if ($field['type'] == "password") $field['input_type'] = "password";
			else if ($field['type'] == "bool") $field['input_type'] = "checkbox";
			else if ($field['type'] == "datetime") $field['input_type'] = "date_select";
			else if (isset($field['upload'])) $field['input_type'] = "file";
			else $field['input_type'] = "text";
		}
		if ($field['input_type'] == "file") $model .= " multipart=\"true\"";
		foreach ($field as $k => $v) {
			if (file_exists(BASE_DIR."/util/filters/$k.php")) $kids .= "\t\t<filter name=\"$k\" value=\"$v\"/>\n";
			else $model .= " $k=\"$v\"";
		}
		if ($args->flag('l') == $name) $model .= " label=\"true\""; else $model .= " display=\"true\"";
		if (empty($kids)) $model .= "/>\n"; else $model .= ">\n$kids\t</field>\n";
	}
	$model .= "</model>";

	//WRITE XML
	$file = fopen("var/xml/$argv[2].xml", "wb");
	fwrite($file, $model);
	fclose($file);
	chmod("var/xml/$argv[2].xml", 0777);
}

//SET VARS FOR Theme
$model_name = $argv[2];
$template = ($args->flag('t')) ? $args->flag('t') : Etc::DEFAULT_TEMPLATE;
$collective = ($args->flag('c')) ? $args->flag('c') : "2";
$dirs = array(); $generate = array(); $paths = array(); $copy = array();

//INCLUDE Theme GENERATOR FILE
if ($args->flag('u')) include("app/themes/".Theme::FOLDER."/$argv[1]/update.php");
else include("app/themes/".Theme::FOLDER."/$argv[1]/$argv[1].php");

//CREATE DIRECTORIES
foreach ($dirs as $dir) if (!file_exists($dir)) exec("./script/cgenerate dir $dir");
//CREATE FILES
foreach ($generate as $stylesheet => $output) {
	exec(BASE_DIR."/script/cgenerate sax ".Etc::JAVA_PATH." ".Etc::SAXON_PATH." -o:$output -s:var/xml/$argv[2].xml -xsl:app/themes/".Theme::FOLDER."/$stylesheet");
}
//COPY FILES
foreach ($copy as $origin => $dest) exec("./script/cgenerate copy $dest app/themes/".Theme::FOLDER."/$origin");
//ADD URI
foreach ($paths as $keys => $values) $sb->db->Execute("INSERT INTO ".P("uris")." ($keys) VALUES ($values)");

exit(0);
?>
