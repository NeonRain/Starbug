#!/usr/bin/php
<?php
# Copyright (C) 2008-2010 Ali Gangji
# Distributed under the terms of the GNU General Public License v3
/**
 * This file is part of StarbugPHP <br/>
 * @file script/generate generates code from XSLT stylesheets
 * @author Ali Gangji <ali@neonrain.com>
 * @ingroup script
 */
$help = "Usage: generate TYPE NAME [OPTIONS]\n\n";
$help .= "TYPE\tWhat to generate\n";
$help .= "    \t\tcrud - CRUD nouns\n";
$help .= "    \t\tmodel - Object model\n";
if ($argc==2) $argv[2] = "";
include(dirname(__FILE__)."/../core/cli.php");
$to = reset($sb->query("options", "select:value  where:name='migration'  limit:1"));
//MOVE TO CURRENT MIGRATION
$current = 0;

while ($current < $to) {
	$migration = new $schemer->migrations[$current]();
	$migration->up();
	$current++;
}
include(BASE_DIR."/etc/Theme.php");
include(BASE_DIR."/util/Args.php");
$args = new Args();
global $sb;
function get_relations($from, $to) {
	global $schemer;
	$fields = $schemer->get_table($from);
	$return = (isset($fields['id'])) ? array($from => array()) : array();
	$hook = "";
	foreach($fields as $column => $options) {
		if (isset($options['references'])) {
			$ref = explode(" ", $options['references']);
			if (0 === strpos($options['references'], $to)) $hook = $column;
			else $return[$ref[0]] = array("lookup" => $from, "ref_field" => $column);
		}
	}
	if (empty($hook)) return array();
	foreach ($return as $idx => $arr) $return[$idx]["hook"] = $hook;
	return $return;
}
if ((!empty($argv[2])) && (isset($schemer->tables[$argv[2]]))) {
	$fields = $schemer->get_table($argv[2]);

	//CREATE MODEL XML
	$model = "<model name=\"$argv[2]\" label=\"".ucwords($argv[2])."\" package=\"".Etc::WEBSITE_NAME."\">\n";
	$relations = array();
	foreach($fields as $name => $field) {
		$model .= "\t<field name=\"$name\"";
		$kids = "";
		if (!isset($field['input_type'])) {
			if ($field['type'] == "text") $field['input_type'] = "textarea";
			else if ($field['type'] == "password") $field['input_type'] = "password";
			else if ($field['type'] == "bool") $field['input_type'] = "checkbox";
			else if ($field['type'] == "datetime") $field['input_type'] = "date_select";
			else if (isset($field['upload'])) $field['input_type'] = "file";
			else $field['input_type'] = "text";
		}
		if ($field['input_type'] == "file") $model .= " multipart=\"true\"";
		foreach ($field as $k => $v) {
			if (("references" == $k) && (false === strpos($v, $argv[2]))) {
				$ref = explode(" ", $v);
				$kids .= "\t\t<references model=\"$ref[0]\" field=\"$ref[1]\"/>\n";
			}
			if (file_exists(BASE_DIR."/app/filters/store/$k.php")) $kids .= "\t\t<filter name=\"$k\" value=\"$v\"/>\n";
			else $model .= " $k=\"$v\"";
		}
		if ($args->flag('l') == $name) $model .= " label=\"true\""; else $model .= " display=\"true\"";
		if (empty($kids)) $model .= "/>\n"; else $model .= ">\n$kids\t</field>\n";
	}
	foreach ($schemer->tables as $table => $fields) {
		$relations = get_relations($table, $argv[2]);
		foreach ($relations as $m => $r) {
			$model .= "\t<relation model=\"$m\" field=\"$r[hook]\"".((!empty($r['lookup'])) ? " lookup=\"$r[lookup]\" ref_field=\"$r[ref_field]\"" : "")."/>\n";
		}
	}
	$model .= "</model>";

	//WRITE XML
	$file = fopen("var/xml/$argv[2].xml", "wb");
	fwrite($file, $model);
	fclose($file);
	chmod("var/xml/$argv[2].xml", 0777);
}

//SET VARS FOR Theme
$model_name = $argv[2];
$template = ($args->flag('t')) ? $args->flag('t') : Etc::DEFAULT_TEMPLATE;
$collective = ($args->flag('c')) ? $args->flag('c') : "2";
$dirs = array(); $generate = array(); $paths = array(); $copy = array();

//INCLUDE Theme GENERATOR FILE
if ($args->flag('u')) include(BASE_DIR."/app/themes/".Theme::FOLDER."/$argv[1]/update.php");
else include(BASE_DIR."/app/themes/".Theme::FOLDER."/$argv[1]/$argv[1].php");

//CREATE DIRECTORIES
foreach ($dirs as $dir) if (!file_exists(BASE_DIR."/".$dir)) exec("./script/cgenerate dir ".BASE_DIR."/$dir");
//CREATE FILES
foreach ($generate as $stylesheet => $output) {
	$content = shell_exec(BASE_DIR."/script/cgenerate sax ".Etc::JAVA_PATH." ".Etc::SAXON_PATH." -o:".BASE_DIR."/$output -s:".BASE_DIR."/var/xml/$argv[2].xml -xsl:".BASE_DIR."/app/themes/".Theme::FOLDER."/$stylesheet 2>&1");
	fwrite(STDOUT, $content);
}
echo $content;
//COPY FILES
foreach ($copy as $origin => $dest) fwrite(STDOUT, shell_exec(BASE_DIR."/script/cgenerate copy ".BASE_DIR."/$dest ".BASE_DIR."/app/themes/".Theme::FOLDER."/$origin"));
//ADD URI
foreach ($paths as $keys => $values) $sb->db->Execute("INSERT INTO ".P("uris")." ($keys) VALUES ($values)");

exit(0);
?>
