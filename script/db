#!/usr/bin/php
<?php
	define('BASE_DIR', str_replace("/script", "", dirname(__FILE__)));
	set_include_path(get_include_path().PATH_SEPARATOR.BASE_DIR);
	define("STDOUT", fopen("php://stdout", "wb"));
	define("STDIN", fopen("php://stdin", "r"));
	include(BASE_DIR."/etc/Etc.php");
	include(BASE_DIR."/core/init.php");
	include(BASE_DIR."/core/db/Schemer.php");
	global $schemer;
	$schemer = new Schemer($sb->db);
	$migrations = unserialize(reset($sb->query("options", "select:value  where:name='migrations'  limit:1")));
	call_user_func_array(array($schemer, "add_migrations"), $migrations);
	$sb->import("util/cli");
	$script = array_shift($argv);
	$what = array_shift($argv);
	if ($what == "sync") $schemer->migrate();
	if ($what == "migrate") {
		$next = array_shift($argv);
		if (false !== strpos($next, ":")) {
			$next = explode(":", $next);
			$from = $next[0];
			$to = $next[1];
			$schemer->migrate($to, $from);
		} else {
			$to = $next;
			$schemer->migrate($to);
		}
	}
	if ($what == "dump") {
		$tables = $sb->db->query("SHOW TABLES LIKE '".Etc::PREFIX."%'")->fetchAll(PDO::FETCH_ASSOC);
		if (!file_exists(BASE_DIR."/var/dump")) {
			mkdir(BASE_DIR."/var/dump");
			chmod(BASE_DIR."/var/dump", 0777);
		}
		foreach($tables as $t) {
			$table = array_shift($t);
			echo "Dumping Table $table...\n";
			$search = array(";");
			$replace = array("\;");
			$user = str_replace($search, $replace, Etc::DB_USERNAME);
			$pass = str_replace($search, $replace, Etc::DB_PASSWORD);
			$dbname = str_replace($search, $replace, Etc::DB_NAME);
			$host = str_replace($search, $replace, Etc::DB_HOST);
			exec("mysqldump -c --host=".$host." -u ".$user." -p".$pass." ".$dbname." ".$table." > ".BASE_DIR."/var/dump/$table.sql");
			chmod(BASE_DIR."/var/dump/$table.sql", 0777);
		}
	}
	if ($what == "store") {
		$name = array_shift($argv);
		$params = join("  ", $argv);
		$params = starr::star($params);
		$errors = $sb->store($name, $params);
		if (empty($errors)) {
			$id = (empty($params['id'])) ? $sb->insert_id : $params['id'];
			$what = "query";
			$argv = array($name, "where:id='$id'");
		} else {
			foreach($errors as $col => $arr) {
				echo $col.":\n";
				foreach($arr as $e => $m) {
					echo "\t".$m."\n";
				}
			}
		}
	}
	if ($what == "remove") {
		$name = array_shift($argv);
		foreach($argv as $index => $arg) {
			$arg = explode(":", $arg, 2);
			$argv[$index] = $arg[0]."='".$arg[1]."'";
		}
		$params = join(" ", $argv);
		$sb->remove($name, $params);
	}
	if ($what == "query") {
		$name = array_shift($argv);
		$params = join("  ", $argv);
		$records = $sb->query($name, $params);
		echo "query $name $params\n";
		cli::table($records);
	}
?>
