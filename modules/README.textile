h1. Modules reference

* Intro
* Configuration
* Creating a Module
* Commonly Used Structures

h2. Intro

Modules in Starbug are kept in modules/.

Modules are structured just like the app/ folder. All of the files and directories are optional except for info.json. You will only need a subset of these for any given module:

* filters/
* fixtures/ - not yet supported
* forms/
* hooks/
* layouts/
* models/ 
* public/
* templates/
* tests/ - not yet supported
* up.php
* down.php
* global_functions.php
* info.json

themes are not supported within modules.

uris created in the up file of a module without a prefix specified will assume a prefix of 'modules/[module-name]/views/'

see the next section for details on the info.json file.

h2. Configuration

All configuration for modules are done in these files:

* etc/modules.json - set enabled modules here
* modules/[module]/info.json - module specific options

In the info.json file you can specify some basic information about your module such as a name and description. Additionally you can specify:

h3. styles - *not yet supported*

A list of stylesheets to be loaded. In development mode, they will be loaded indivdually. In production mode they will be built into a single stylsheet.

h3. scripts - *not yet supported*

A list of Javascript files to be loaded. In development mode, they will be loaded indivdually. In production mode they will be built into a single script.


h2. Creating a Module

Starbug includes various modules which you can use as a starting point. If you want to start from scratch, all you need to do is create a directory in the modules folder
and add that directory to etc/modules.json to enable the module. 

h2. Commonly Used Structures

All of this information applies equally to the app/ folder.

h3. Migrations

Migrating is handled by 2 files. up.php and down.php. Put any tables, uris or permits you wish to create in up.php and drop them in down.php to support migrating down.

h3. Models

To create or extend a model, say Users, you must create models/Users.php which defines a Users class. Any number of Users models can be defined across modules, they will
be dynamically altered to form an extension chain.

h3. Global Functions

Simply place a file called global_functions.php in your module folder and it will be loaded. You should place any and all global functions you declare in this file.
You should not use this to perform initialization actions, but only to define functions.

h3. Hooks

Hooks can be used to load code at a specific point in the application cycle. For example, custom initialization procedures can be placed in hooks/global.init.php.
In this case 'init' is the name of the hook. 'global' is a tag indicating that the hook should run in all situations. Other tag options are 'cli' for command line only
and any tags applied to uris to only run on those pages.
